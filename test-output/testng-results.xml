<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="14498" started-at="2021-12-03T04:29:58Z" finished-at="2021-12-03T04:30:12Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="14498" started-at="2021-12-03T04:29:58Z" finished-at="2021-12-03T04:30:12Z">
      <class name="com.sample.test.demo.tests.DemoTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="init" is-config="true" duration-ms="8573" started-at="2021-12-03T04:29:58Z" finished-at="2021-12-03T04:30:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="beforeMethod" is-config="true" duration-ms="591" started-at="2021-12-03T04:30:07Z" finished-at="2021-12-03T04:30:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="placeOrderTest()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="placeOrderTest" duration-ms="996" started-at="2021-12-03T04:30:07Z" description="Place an Order" finished-at="2021-12-03T04:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="afterMethod" is-config="true" duration-ms="40" started-at="2021-12-03T04:30:08Z" finished-at="2021-12-03T04:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="beforeMethod" is-config="true" duration-ms="322" started-at="2021-12-03T04:30:08Z" finished-at="2021-12-03T04:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="resetOrderTest()[pri:1, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="resetOrderTest" duration-ms="1171" started-at="2021-12-03T04:30:08Z" description="Reset the Selection of the Order" finished-at="2021-12-03T04:30:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetOrderTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="afterMethod" is-config="true" duration-ms="47" started-at="2021-12-03T04:30:10Z" finished-at="2021-12-03T04:30:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="beforeMethod" is-config="true" duration-ms="319" started-at="2021-12-03T04:30:10Z" finished-at="2021-12-03T04:30:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="paymentsSelectTest()[pri:2, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="paymentsSelectTest" duration-ms="703" started-at="2021-12-03T04:30:10Z" description="Select both payment types" finished-at="2021-12-03T04:30:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.sample.test.demo.tests.DemoTest.paymentsSelectTest(DemoTest.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentsSelectTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="afterMethod" is-config="true" duration-ms="32" started-at="2021-12-03T04:30:11Z" finished-at="2021-12-03T04:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="beforeMethod" is-config="true" duration-ms="297" started-at="2021-12-03T04:30:11Z" finished-at="2021-12-03T04:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="mandatoryFieldsTest()[pri:3, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="mandatoryFieldsTest" duration-ms="590" started-at="2021-12-03T04:30:11Z" description="Verify if Name and Phone are mandatory Fields" finished-at="2021-12-03T04:30:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.sample.test.demo.tests.DemoTest.mandatoryFieldsTest(DemoTest.java:95)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mandatoryFieldsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="afterMethod" is-config="true" duration-ms="28" started-at="2021-12-03T04:30:12Z" finished-at="2021-12-03T04:30:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.sample.test.demo.tests.DemoTest@49993335]" name="tearDown" is-config="true" duration-ms="749" started-at="2021-12-03T04:30:12Z" finished-at="2021-12-03T04:30:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sample.test.demo.tests.DemoTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
